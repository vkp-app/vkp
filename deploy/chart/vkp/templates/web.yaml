apiVersion: apps/v1
kind: Deployment
metadata:
  name: web
  labels:
    {{- include "web.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "web.labels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "web.labels" . | nindent 8 }}
      annotations:
        kubectl.kubernetes.io/default-container: web
    spec:
      {{- if .Values.web.podSecurityContext }}
      securityContext: {{ toYaml .Values.web.podSecurityContext | nindent 8 }}
      {{- end }}
      automountServiceAccountToken: false
      volumes:
        - name: tls
          secret:
            secretName: {{ .Values.global.caSecret | default .Values.global.ingress.tlsSecret }}
        {{- if .Values.oauthProxy.embedStaticResources }}
        - name: templates
          configMap:
            name: oauth2-proxy-static
        {{- end }}
      containers:
        - name: web
          {{- $wi := dict "image" .Values.web.image "chart" $.Chart }}
          image: {{ include "image" $wi }}
          env:
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            {{- if .Values.web.extraEnv }}
            {{- toYaml .Values.web.extraEnv | nindent 12 }}
            {{- end }}
          volumeMounts:
            - mountPath: /var/run/secrets/paas.dcas.dev/tls
              name: tls
              readOnly: true
{{- if .Values.web.containerSecurityContext }}
          securityContext: {{ toYaml .Values.web.containerSecurityContext | nindent 10 }}
{{- end }}
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            timeoutSeconds: 3
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 15
            timeoutSeconds: 15
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
{{- if .Values.web.resources }}
          resources:
{{ toYaml .Values.web.resources | indent 12 }}
{{- end }}
        - name: oauth-proxy
          {{- $opi := dict "image" .Values.oauthProxy.image "chart" $.Chart }}
          image: {{ include "image" $opi }}
          args:
            - --http-address=:8079
            - --provider=oidc
            - --client-id=vkp
            - --email-domain=*
            - --oidc-issuer-url=https://dex.{{ .Values.global.ingress.domain }}
            - --redirect-url=https://vkp.{{ .Values.global.ingress.domain }}/oauth2/callback
            - --prefer-email-to-user=true
            - --cookie-secure=true
            - --cookie-refresh=2h
            - --code-challenge-method=S256
            - --upstream=http://localhost:8080
            - --scope=openid profile email groups
            {{- if .Values.oauthProxy.embedStaticResources }}
            - --custom-templates-dir=/srv/templates
            {{- end }}
            {{- if .Values.oauthProxy.extraArgs }}
            {{- toYaml .Values.oauthProxy.extraArgs | nindent 12 }}
            {{- end }}
          env:
            - name: SSL_CERT_DIR
              value: {{ include "pki.caPath" . | quote }}
            - name: OAUTH2_PROXY_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.idp.existingSecret | default (include "dex.secret" .) }}
                  key: DEX_CLIENT_SECRET
            - name: OAUTH2_PROXY_COOKIE_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.idp.existingSecret | default (include "dex.secret" .) }}
                  key: OAUTH2_PROXY_COOKIE_SECRET
            {{- if .Values.oauthProxy.extraEnv }}
            {{- toYaml .Values.oauthProxy.extraEnv | nindent 12 }}
            {{- end }}
          ports:
            - containerPort: 8079
              name: web
              protocol: TCP
          volumeMounts:
            - mountPath: /var/run/secrets/paas.dcas.dev/tls
              name: tls
              readOnly: true
            {{- if .Values.oauthProxy.embedStaticResources }}
            - mountPath: /srv/templates
              name: templates
              readOnly: true
            {{- end }}
{{- if .Values.oauthProxy.containerSecurityContext }}
          securityContext: {{ toYaml .Values.oauthProxy.containerSecurityContext | nindent 10 }}
{{- end }}
{{- if .Values.oauthProxy.resources }}
          resources:
{{ toYaml .Values.oauthProxy.resources | indent 12 }}
{{- end }}
---
kind: Service
apiVersion: v1
metadata:
  name: web
  labels:
    {{- include "web.labels" . | nindent 4 }}
spec:
  type: ClusterIP
  ports:
    - name: web
      protocol: TCP
      port: 80
      targetPort: web
  selector:
    {{- include "web.labels" . | nindent 4 }}
