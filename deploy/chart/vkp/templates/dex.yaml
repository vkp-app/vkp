apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
{{- with .Values.global.ingress.annotations }}
{{- toYaml . | nindent 4 }}
{{- end }}
  labels:
    {{- include "dex.labels" . | nindent 4 }}
  name: dex
spec:
  ingressClassName: {{ .Values.global.ingress.ingressClassName }}
  tls:
    - hosts:
        - dex.{{ .Values.global.ingress.domain }}
      secretName: tls-dex
  rules:
    - host: dex.{{ .Values.global.ingress.domain }}
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: dex
                port:
                  number: 5556
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dex
  labels:
    {{- include "dex.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "dex.labels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "dex.labels" . | nindent 8 }}
      annotations:
        checksum/config: {{ tpl (print $.Template.BasePath "/dex/config.yaml") . | sha256sum }}
    spec:
      serviceAccountName: dex
      {{- if .Values.dex.podSecurityContext }}
      securityContext: {{ toYaml .Values.dex.podSecurityContext | nindent 8 }}
      {{- end }}
      containers:
        - name: dex
          image: ghcr.io/dexidp/dex:v2.35.3
          imagePullPolicy: IfNotPresent
          args:
            - dex
            - serve
            - '--web-http-addr'
            - '0.0.0.0:5556'
            - '--grpc-addr'
            - '0.0.0.0:5557'
            - '--telemetry-addr'
            - '0.0.0.0:5558'
            - /etc/dex/config.yaml
            {{- if .Values.dex.extraArgs }}
            {{- toYaml .Values.dex.extraArgs | nindent 12 }}
            {{- end }}
          ports:
            - name: http
              containerPort: 5556
              protocol: TCP
            - name: grpc
              containerPort: 5557
              protocol: TCP
            - name: telemetry
              containerPort: 5558
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /healthz/ready
              port: telemetry
              scheme: HTTP
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /healthz/live
              port: telemetry
              scheme: HTTP
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
{{- if .Values.dex.containerSecurityContext }}
          securityContext: {{ toYaml .Values.dex.containerSecurityContext | nindent 10 }}
{{- end }}
{{- if .Values.dex.resources }}
          resources:
{{ toYaml .Values.dex.resources | indent 12 }}
{{- end }}
          volumeMounts:
            - name: config
              readOnly: true
              mountPath: /etc/dex
      volumes:
        - name: config
          secret:
            secretName: dex
---
apiVersion: v1
kind: Service
metadata:
  name: dex
  labels:
    {{- include "dex.labels" . | nindent 4 }}
spec:
  type: ClusterIP
  ports:
    - name: http
      protocol: TCP
      appProtocol: http
      port: 5556
      targetPort: http
    - name: grpc
      protocol: TCP
      appProtocol: http
      port: 5557
      targetPort: grpc
    - name: telemetry
      protocol: TCP
      appProtocol: http
      port: 5558
      targetPort: telemetry
  selector:
    {{- include "dex.labels" . | nindent 4 }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: dex
  labels:
    {{- include "dex.labels" . | nindent 4 }}
rules:
  - verbs:
      - list
      - create
    apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: dex-cluster
  labels:
    {{- include "dex.labels" . | nindent 4 }}
subjects:
  - kind: ServiceAccount
    name: dex
    namespace: {{ .Release.Namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dex
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: dex
  labels:
    {{- include "dex.labels" . | nindent 4 }}
rules:
  - verbs:
      - '*'
    apiGroups:
      - dex.coreos.com
    resources:
      - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: dex
  labels:
    {{- include "dex.labels" . | nindent 4 }}
subjects:
  - kind: ServiceAccount
    name: dex
    namespace: {{ .Release.Namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: dex
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: dex
  labels:
    {{- include "dex.labels" . | nindent 4 }}