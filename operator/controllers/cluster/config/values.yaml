ingress:
  enabled: false
{{- if .OpenShift }}
openshift:
  enable: true
{{- else }}
securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 12345
{{- end }}
podAnnotations:
  paas.dcas.dev/metric-target: "{{ .Name }}"
podLabels:
  paas.dcas.dev/metric-target: "{{ .Name }}"
syncer:
  {{- if .VclusterImage }}
  image: {{ .VclusterImage }}
  {{- end }}
sync:
  ingresses:
    enabled: true
vcluster:
  image: {{ .Image }}
  extraArgs:
    - --kube-apiserver-arg="--oidc-issuer-url={{ .IDP.URL }}"
    - --kube-apiserver-arg="--oidc-client-id=$(DEX_CLIENT_ID)"
    - --kube-apiserver-arg="--oidc-username-claim=email"
    - --kube-apiserver-arg="--oidc-username-prefix=-"
    - --kube-apiserver-arg="--oidc-groups-prefix=oidc:"
{{- if .IDP.CustomCA }}
    - --kube-apiserver-arg="--oidc-ca-file=/var/run/secrets/paas.dcas.dev/dex/ca.crt"
{{- else }}
    - --kube-apiserver-arg="--oidc-ca-file=/var/run/secrets/paas.dcas.dev/tls/ca.crt"
{{- end }}
  volumeMounts:
    - name: data
      mountPath: /data
    - name: tls
      mountPath: /var/run/secrets/paas.dcas.dev/tls
      readOnly: true
    - name: dex
      mountPath: /var/run/secrets/paas.dcas.dev/dex
      readOnly: true
    {{- if .CustomCA }}
    - name: custom-ca
      mountPath: /var/run/secrets/paas.dcas.dev/pki
      readOnly: true
    {{- end }}
  env:
    - name: DEX_CLIENT_ID
      valueFrom:
        secretKeyRef:
          name: "{{ .IDP.SecretName }}"
          key: client_id
    {{- if .CustomCA }}
    - name: SSL_CERT_DIR
      value: "/var/run/secrets/paas.dcas.dev/pki:/etc/ssl/certs:/etc/pki/tls/certs:/etc/pki/tls:/etc/pki/ca-trust/extracted:/etc/ssl"
    {{- end }}
volumes:
  - name: dex
    secret:
      secretName: {{ .IDP.SecretName }}
  - name: tls
    secret:
      secretName: {{ .Ingress.TLSSecretName }}
  - name: plugin-tmp
    emptyDir: {}
  {{- if .CustomCA }}
  - name: custom-ca
    secret:
      secretName: {{ .CustomCA }}
  {{- end }}
storage:
  persistence: true
  {{- if .Storage.Size }}
  size: "{{ .Storage.Size }}Gi"
  {{- end }}
  {{- if .Storage.StorageClassName }}
  className: {{ .Storage.StorageClassName }}
  {{- end }}
coredns:
{{- if .HA }}
  replicas: 2
{{- else }}
  replicas: 1
{{- end }}
plugin:
  vkp-hook:
    image: {{ .Plugins.HookImage }}
    imagePullPolicy: {{ .Plugins.PullPolicy }}
    env:
      - name: VCLUSTER_CLUSTER_DOMAIN
        value: "{{ .Ingress.Host }}"
      - name: VCLUSTER_CLUSTER_NAME
        value: "{{ .Name }}"
      {{- if .CustomCA }}
      - name: SSL_CERT_DIR
        value: "/var/run/secrets/paas.dcas.dev/pki:/etc/ssl/certs:/etc/pki/tls/certs:/etc/pki/tls:/etc/pki/ca-trust/extracted:/etc/ssl"
      {{- end }}
    volumeMounts:
      - name: plugin-tmp
        mountPath: /tmp
      {{- if .CustomCA }}
      - name: custom-ca
        mountPath: /var/run/secrets/paas.dcas.dev/pki
        readOnly: true
      {{- end }}
  vkp-sync:
    image: {{ .Plugins.SyncImage }}
    imagePullPolicy: {{ .Plugins.PullPolicy }}
    env:
      {{- if .CustomCA }}
      - name: SSL_CERT_DIR
        value: "/var/run/secrets/paas.dcas.dev/pki:/etc/ssl/certs:/etc/pki/tls/certs:/etc/pki/tls:/etc/pki/ca-trust/extracted:/etc/ssl"
      {{- end }}
      - name: VCLUSTER_CLUSTER_NAME
        value: "{{ .Name }}"
      - name: __GLASS_CLUSTER_URL__
        value: "{{ .Ingress.Host }}"
      - name: __GLASS_INGRESS_CLASS__
        value: "{{ .Ingress.ClassName }}"
      - name: __GLASS_DEX_URL__
        value: "{{ .IDP.URL }}"
      - name: __GLASS_DEX_CLIENT_ID__
        valueFrom:
          secretKeyRef:
            name: "{{ .Name }}-dex"
            key: client_id
      - name: __GLASS_DEX_CLIENT_SECRET__
        valueFrom:
          secretKeyRef:
            name: "{{ .Name }}-dex"
            key: client_secret
    volumeMounts:
      - name: plugin-tmp
        mountPath: /tmp
      {{- if .CustomCA }}
      - name: custom-ca
        mountPath: /var/run/secrets/paas.dcas.dev/pki
        readOnly: true
      {{- end }}
    rbac:
      clusterRole:
        extraRules:
          - apiGroups: ["paas.dcas.dev"]
            resources: ["tenants"]
            verbs: ["get", "list", "watch"]
      role:
        extraRules:
          - apiGroups: ["paas.dcas.dev"]
            resources: ["clusters", "clusteraddons"]
            verbs: ["get", "list", "watch"]
          - apiGroups: ["paas.dcas.dev"]
            resources: ["clusteraddonbindings"]
            verbs: ["get", "list", "watch", "update", "patch"]
          - apiGroups: ["paas.dcas.dev"]
            resources: ["clusters/status", "clusteraddonbindings/status"]
            verbs: ["get", "update", "patch"]
          - apiGroups: [""]
            resources: ["secrets"]
            verbs: ["get"]
